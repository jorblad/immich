{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended"
  ],
  "argocd": {
    "managerFilePatterns": ["/k8s/.+\\.yaml$/"]
  },
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/^k8s/.*\\.ya?ml$/",
        "/^k8s/.*\\.yaml$/"
      ],
      "matchStrings": [
        // tag form e.g. image: registry:5000/org/name:tag or image: org/name:tag
        "image:\\s*['\\\"]?(?<depName>(?:[A-Za-z0-9.-]+(?::\\d+)?/)?[A-Za-z0-9._/-]+):(?<currentValue>[^'\\\"\\s@]+)['\\\"]?",
        // digest form e.g. image: registry/org/name@sha256:abcdef...
        "image:\\s*['\\\"]?(?<depName>(?:[A-Za-z0-9.-]+(?::\\d+)?/)?[A-Za-z0-9._/-]+)@(?<currentValue>sha256:[0-9a-fA-F]+)['\\\"]?"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "{{{depName}}}",
      "versioningTemplate": "docker"
    },

    // Example manager for values files that only contain a tag (no repository).
    // Renovate cannot infer the image name from a lone tag; supply the image via depNameTemplate.
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/^k8s/.+values\\.ya?ml$/",
        "/^charts/mychart/.+values\\.ya?ml$/" 
      ],
      "matchStrings": [
        // match a lone tag under image.tag (or image.tag: ...)
        "image\\.tag:\\s*['\\\"]?(?<currentValue>[^'\\\"\\s]+)['\\\"]?",
        "(?s)image:\\s*\\n\\s*tag:\\s*['\\\"]?(?<currentValue>[^'\\\"\\s]+)['\\\"]?"
      ],
      // Replace the value below with the actual image name for this chart
      "depNameTemplate": "ghcr.io/immich-app/immich-server",
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    }
  ]
}
